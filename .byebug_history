c
student_list
c
cc
c
Library.sign_up
c
library.sign_up
delete_student
c
User.all
Seed.load_user
c
Library.sign_up
method_hash['2'] = 'Library.sign_up'
c
method_hash['1'] = Book.operation
c
Seed.load_books
c
@@books
method_hash['1'] = Book.operation
c
@@books
Seed.load_books
c
Seed.book_user
c
method_hash['1'] = Book.operation
c
method_hash['1'] = Book.operation
c
Book.operation
c1
c
cc
c
1
c
Book.operation
1
c
type.type
type
c
user
user.type
self.pass == pass ? self : nil
authenticat(pass)
c
User.all
Seed.load_user
c
Book.operation
c
Book.operation
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
type
c
User.all
Seed.load_user
c
User.all
Seed.load_user
c
User.all
Seed.load_user
User.all
c
User.all
Seed.load_user
c
Seed.load_user
c
cc
c
a =   Admin.new(first_name: 'Admin', last_name: "babulal", pass: "Babulal@123",  email: "babulal1@gmail.com").save
  Admin.new(first_name: 'Admin', last_name: "babulal", pass: "Babulal@123",  email: "babulal1@gmail.com").save
User.all
Seed.load_user
c
User.allc
User.all
all
all.select { |user| user.email == email}
all.select { |user| user.email == email.to_s }
all.select { |user| user.email == email.to_s }.first
email
find_by_email_and_pass(email:, pass:)
find_by_email_and_pass
pass
email
all.select { |user| user.email == email }.first
c
user.errors
user.valid?
user.errors
user
c
type
c
 self.class.to_s
type
@type
c
self.class.to_s
self.class.o_s
self.class
self
c
type
c
type
c
type
c
type
c
 Kernel.const_get(type)
type.constantize
type
c
1
c
student = @@users.select { |user| user.email == self.to_s }.firststudent = @@users.select { |user| user.email == self.to_s }.first
if User.all.include? email
student = @@users.select { |user| user.email == self.to_s }.firststudent = @@users.select { |user| user.email == self.to_s }.first
if !User.all.include? email
if User.all.include? email; end
if User.all.include? email;
if !User.all.include? email;
if !User.all.include? email;end
if User.all.include? email
if !User.all.include? email
c
Seed.load_user
c
Seed.load_user
c
Seed.load_user
c
Seed.load_user
c
Student.student_operation
user1
user
c
User.all
Seed.load_user
c
user.type
user
user1
c
user = find_by_email(email)
c
user = find_by_email(email)
user
c
Library.render_menu
Library.new
Library.rb
Seed.load_user
user = find_by_email(email)
user
Seed.load_user
c
Seed.load_user
c
Seed.load_user
c
Seed.load_user
user = find_by_email(email)
user
c
user1
user
c
user
c
user = find_by_email(email)
c
user1 = user.authenticat(pass)
user = find_by_email(email)
c
user = find_by_email(email)
c
Seed.load_user
user = find_by_email(email)
User.all
Seed.load_user
c
User.all
user1 = user.authenticat(pass)
user = find_by_email(email)
c
user1 = user.authenticat(pass)
user = find_by_email(email)
c
user = find_by_email(email)
c
user = find_by_email(email)
c
user = find_by_email(email)
c
Seed.load_user
c
Student.new(first_name: 'Student', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
Student.new('Student', "babulal","babulal1@gmail.com","babulal@123")
Admin.all
Student.all
Admin.new(first_name: 'Admin', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
Seed.load_user
c
all
all = User.all.find{|student| student.type == "Student"}
User.all
a = Admin.new(first_name: 'Admin', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
Seed.load_user
c
User.all
a = Admin.new(first_name: 'Admin', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
Seed.load_user
c
User.all
a.all
a = Admin.new(first_name: 'Admin', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
Seed.load_user
c
User.all
a.all
a = Admin.new(first_name: 'Admin', last_name: "babulal", pass: "babulal@123",  email: "babulal@gmail.com")
